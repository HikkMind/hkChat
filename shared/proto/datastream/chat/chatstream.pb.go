// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: chatstream.proto

package chatstream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        string                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chatstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chatstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chatstream_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Message) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type MessageTable struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SenderID       uint32                 `protobuf:"varint,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	SenderUsername string                 `protobuf:"bytes,2,opt,name=senderUsername,proto3" json:"senderUsername,omitempty"`
	ChatID         uint32                 `protobuf:"varint,3,opt,name=chatID,proto3" json:"chatID,omitempty"`
	Message        string                 `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	Time           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MessageTable) Reset() {
	*x = MessageTable{}
	mi := &file_chatstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTable) ProtoMessage() {}

func (x *MessageTable) ProtoReflect() protoreflect.Message {
	mi := &file_chatstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTable.ProtoReflect.Descriptor instead.
func (*MessageTable) Descriptor() ([]byte, []int) {
	return file_chatstream_proto_rawDescGZIP(), []int{1}
}

func (x *MessageTable) GetSenderID() uint32 {
	if x != nil {
		return x.SenderID
	}
	return 0
}

func (x *MessageTable) GetSenderUsername() string {
	if x != nil {
		return x.SenderUsername
	}
	return ""
}

func (x *MessageTable) GetChatID() uint32 {
	if x != nil {
		return x.ChatID
	}
	return 0
}

func (x *MessageTable) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MessageTable) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type ChatHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       []*Message             `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatHistoryResponse) Reset() {
	*x = ChatHistoryResponse{}
	mi := &file_chatstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryResponse) ProtoMessage() {}

func (x *ChatHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryResponse.ProtoReflect.Descriptor instead.
func (*ChatHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chatstream_proto_rawDescGZIP(), []int{2}
}

func (x *ChatHistoryResponse) GetHistory() []*Message {
	if x != nil {
		return x.History
	}
	return nil
}

type ChatHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        int32                  `protobuf:"varint,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatHistoryRequest) Reset() {
	*x = ChatHistoryRequest{}
	mi := &file_chatstream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryRequest) ProtoMessage() {}

func (x *ChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatstream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*ChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chatstream_proto_rawDescGZIP(), []int{3}
}

func (x *ChatHistoryRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

type OperationStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	mi := &file_chatstream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_chatstream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_chatstream_proto_rawDescGZIP(), []int{4}
}

func (x *OperationStatus) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_chatstream_proto protoreflect.FileDescriptor

const file_chatstream_proto_rawDesc = "" +
	"\n" +
	"\x10chatstream.proto\x12\n" +
	"chatstream\x1a\x1fgoogle/protobuf/timestamp.proto\"k\n" +
	"\aMessage\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\tR\x06sender\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\"\xb4\x01\n" +
	"\fMessageTable\x12\x1a\n" +
	"\bsenderID\x18\x01 \x01(\rR\bsenderID\x12&\n" +
	"\x0esenderUsername\x18\x02 \x01(\tR\x0esenderUsername\x12\x16\n" +
	"\x06chatID\x18\x03 \x01(\rR\x06chatID\x12\x18\n" +
	"\aMessage\x18\x04 \x01(\tR\aMessage\x12.\n" +
	"\x04time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\"D\n" +
	"\x13ChatHistoryResponse\x12-\n" +
	"\ahistory\x18\x01 \x03(\v2\x13.chatstream.MessageR\ahistory\",\n" +
	"\x12ChatHistoryRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\x05R\x06chatId\")\n" +
	"\x0fOperationStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status2\xaa\x01\n" +
	"\vChatService\x12R\n" +
	"\x0fLoadChatHistory\x12\x1e.chatstream.ChatHistoryRequest\x1a\x1f.chatstream.ChatHistoryResponse\x12G\n" +
	"\x0eProcessMessage\x12\x18.chatstream.MessageTable\x1a\x1b.chatstream.OperationStatusB\x0eZ\f.;chatstreamb\x06proto3"

var (
	file_chatstream_proto_rawDescOnce sync.Once
	file_chatstream_proto_rawDescData []byte
)

func file_chatstream_proto_rawDescGZIP() []byte {
	file_chatstream_proto_rawDescOnce.Do(func() {
		file_chatstream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chatstream_proto_rawDesc), len(file_chatstream_proto_rawDesc)))
	})
	return file_chatstream_proto_rawDescData
}

var file_chatstream_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chatstream_proto_goTypes = []any{
	(*Message)(nil),               // 0: chatstream.Message
	(*MessageTable)(nil),          // 1: chatstream.MessageTable
	(*ChatHistoryResponse)(nil),   // 2: chatstream.ChatHistoryResponse
	(*ChatHistoryRequest)(nil),    // 3: chatstream.ChatHistoryRequest
	(*OperationStatus)(nil),       // 4: chatstream.OperationStatus
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_chatstream_proto_depIdxs = []int32{
	5, // 0: chatstream.Message.time:type_name -> google.protobuf.Timestamp
	5, // 1: chatstream.MessageTable.time:type_name -> google.protobuf.Timestamp
	0, // 2: chatstream.ChatHistoryResponse.history:type_name -> chatstream.Message
	3, // 3: chatstream.ChatService.LoadChatHistory:input_type -> chatstream.ChatHistoryRequest
	1, // 4: chatstream.ChatService.ProcessMessage:input_type -> chatstream.MessageTable
	2, // 5: chatstream.ChatService.LoadChatHistory:output_type -> chatstream.ChatHistoryResponse
	4, // 6: chatstream.ChatService.ProcessMessage:output_type -> chatstream.OperationStatus
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chatstream_proto_init() }
func file_chatstream_proto_init() {
	if File_chatstream_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chatstream_proto_rawDesc), len(file_chatstream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatstream_proto_goTypes,
		DependencyIndexes: file_chatstream_proto_depIdxs,
		MessageInfos:      file_chatstream_proto_msgTypes,
	}.Build()
	File_chatstream_proto = out.File
	file_chatstream_proto_goTypes = nil
	file_chatstream_proto_depIdxs = nil
}
